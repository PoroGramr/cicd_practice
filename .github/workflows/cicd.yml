name: CI/CD for Spring Boot

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

#      - name: Run Tests
#        run: ./gradlew test

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-app:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/spring-app:latest ${{ secrets.DOCKER_USERNAME }}/spring-app:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:${{ github.sha }}

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/spring-app:latest
            docker stop spring-app || true
            docker rm spring-app || true
            docker run -d --name spring-app -p 80:8080 \
            -e TZ=Asia/Seoul \
            ${{ secrets.DOCKER_USERNAME }}/spring-app:latest